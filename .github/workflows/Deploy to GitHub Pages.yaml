name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) 安装 pnpm（关键修复点）
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      # 2) 安装 Node，并让缓存策略识别 pnpm（可选但推荐）
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # 3) 打个版本号，确认 pnpm 已可用（调试用）
      - name: Check pnpm
        run: pnpm -v

      # 4) 装依赖（有 lock 就用 --frozen-lockfile；没有就普通装）
      - name: Install dependencies
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install
          fi

      # 5) 构建 & 导出静态站点（Next.js）
      - name: Build & Export static site
        run: pnpm build

      # 6) 保险：把 CNAME 和 .nojekyll 放进 out/
      - name: Add CNAME and .nojekyll
        run: |
          echo "career.wic.monster" > out/CNAME
          touch out/.nojekyll

      # 7) 上传制品给 Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4